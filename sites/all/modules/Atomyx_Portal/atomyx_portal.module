<?php

	function atomyx_portal_menu() {
		$items['my_profile'] = array(
			'title'           => 'My profile',
			'page callback'   => 'atomyx_my_account',
			'access callback' => TRUE,
			'type'            => MENU_NORMAL_ITEM,
			'weight'          => -10,
			'menu_name'       => 'main-menu',
		);
		$items['admin/atomyx_portal_administration'] = array(
			'title'           => 'Atomyx Portal',
			'page callback'   => 'atomyx_portal_administration',
			'access callback' => TRUE,
			'type'            => MENU_NORMAL_ITEM,
			'weight'          => 10,
			'menu_name'       => 'management',
		);

		$items['admin/atomyx_portal_administration/config'] = array(
			'title' => 'Path settings',
			'description' => 'Configure path for files.',
			'page callback' => 'drupal_get_form',
			'page arguments' => array('atomyx_portal_settings'),
			'access callback' => TRUE,
			'access arguments' => array('administer site configuration'),
			'type' => MENU_NORMAL_ITEM,
			'menu_name'       => 'management',
		);

		return $items;
	}

	function product_page() {
		return $output = '';
	}

	function atomyx_my_account() {
		return drupal_goto('user');;
	}

	function atomyx_portal_administration() {
		return $output = 'Hello my dear';
	}
	function atomyx_portal_settings() {

		$title = db_query("SELECT * FROM {file_path} WHERE id = 1", array('id' => 1))->FetchAssoc();

		 $form = array(
			'#prefix' => '<div class="atomyx_config_form">', 
			'#suffix' => '</div>', );

		 $form['atomyx_files_path'] = array(
			'#type'          => 'textfield',
			'#title'         => t('Deliver all files to the following folder:'),
			'#default_value' => $title['files_path'],
			'#size'          => 50,
			'#maxlength'     => 250,
			'#description'   => t('Field for files path'),
			'#required'      => true,
			'#prefix'        => '<div class="sub2">', 
			'#suffix'        => '</div>', 
		 );


		$form['atomyx_folder_per_product'] = array(
			'#type'          => 'checkbox',
			'#title'         => t('Create a separate sub folder per product'),
			'#default_value' => $title['folder_per_product'], 
			'#return_value'  => 1,
			'#prefix'        => '<div class="sub2">', 
			'#suffix'        => '</div>',
		); 

		$form['atomyx_folder_per_job'] = array(
			'#type'          => 'checkbox',
			'#title'         => t('Deliver each file in its own job folder'),
			'#default_value' => $title['folder_per_job'], 
			'#return_value'  => 1,
			'#prefix'        => '<div class="atomyx_path">', 
			'#suffix'        => '</div>',
		); 
		 
		 $form['atomyx_tests_path'] = array(
			'#type'          => 'textfield',
			'#title'         => t('Deliver all tests to the following folder:'),
			'#default_value' => $title['tests_path'],
			'#size'          => 50,
			'#maxlength'     => 250,
			'#description'   => t('Field for tests path'),
			'#required'      => true,
			'#prefix'        => '<div class="atomyx_path">', 
			'#suffix'        => '</div>', 
		 );
		 
		 $form['atomyx_pdfcli_path'] = array(
			'#type'          => 'textfield',
			'#title'         => t('pdfToolbox CLI location:'),
			'#default_value' => $title['pdfcli_path'],
			'#size'          => 50,
			'#maxlength'     => 250,
			'#description'   => t('AtomyxPortal Tool path'),
			'#required'      => true,
			'#prefix'        => '<div class="atomyx_path">', 
			'#suffix'        => '</div>', 
		);
		$form['atomyx_configs_submit'] = array(
			'#type'   => 'submit',
			'#value'  => t('Save'),
			'#prefix' => '<div >', 
			'#suffix' => '</div>', 
			'#submit' => array('atomyx_configs_submit'),
		); 
		return $form;
	}
	
	function atomyx_configs_submit($form, &$form_state) {
		$configs = array();
		$configs['files_path']  = $form_state['values']['atomyx_files_path'];
		$configs['tests_path']  = $form_state['values']['atomyx_tests_path'];
		$configs['pdfcli_path'] = $form_state['values']['atomyx_pdfcli_path'];

		if(isset($_POST['atomyx_folder_per_product']))
				  $configs['folder_per_product'] = check_plain($_POST['atomyx_folder_per_product']);
			else {$configs['folder_per_product'] = 0;};

		if(isset($_POST['atomyx_folder_per_job']))
				  $configs['folder_per_job'] = check_plain($_POST['atomyx_folder_per_job']);
			else {$configs['folder_per_job'] = 0;}; 

		$query = db_select('file_path');
			$query->addExpression('COUNT(*)');
			$count = $query->execute()->fetchField();     

		if ($count == 0 ) {
			$result = db_insert('file_path')
				->fields(array(
					'id'                 => 1,
					'files_path'         => $configs['files_path'],
					'tests_path'         => $configs['tests_path'],
					'folder_per_product' => $configs['folder_per_product'],
					'folder_per_job'     => $configs['folder_per_job'],
					'pdfcli_path'        => $configs['pdfcli_path'],
				))
			->execute(); } else {
								db_update('file_path')
										->fields(array(
											'files_path'         => $configs['files_path'],
											'tests_path'         => $configs['tests_path'],
											'folder_per_product' => $configs['folder_per_product'],
											'folder_per_job'     => $configs['folder_per_job'],
											'pdfcli_path'        => $configs['pdfcli_path'],
										))
										->condition('id', 1)
										->execute(); };
		drupal_set_message('The configuration was successfully saved.'); 
	}



function atomyx_portal_block_info() {
	$blocks['atomyxhelp'] = array(
		'info'   => t('Atomyx help block'), //The name that will appear in the block list.
		'cache'  => DRUPAL_NO_CACHE, //Disable cache
		'region' => 'content',
		'pages'  =>  'Jobs',
		'visibility' => BLOCK_VISIBILITY_LISTED,  
		'status' => 1,
		'weight' => -30,
	);

	$blocks['deliver'] = array(
		'info' => t('Deliver'),
		'cache' => DRUPAL_CACHE_PER_ROLE, // default
		'cache'  => DRUPAL_NO_CACHE, //Disable cache
		'region' => 'content',
		'pages'  =>  'deliver',
		'visibility' => BLOCK_VISIBILITY_LISTED,  
		'status' => 1,
		'weight' => -30,
	);

	$blocks['wellcome'] = array(
		'info'   => t('wellcome'), //The name that will appear in the block list.
		'cache'  => DRUPAL_NO_CACHE, //Disable cache
		'region' => 'content',
		'pages'  =>  'Wellcome',
		'visibility' => BLOCK_VISIBILITY_LISTED,  
		'status' => 1,
		'weight' => -30,
	);

	return $blocks;
}

function atomyx_portal_block_configure($delta = '') {
	$form = array();
	switch($delta) {
		case 'atomyxhelp' : 
			$form['atomyxhelp_string'] = array(
				'#type' => 'textfield',
				'#title' => t('Block contents'),
				'#size' => 60,
				'#description' => t('This text will appear in the atomyxhelp block.'),
				'#default_value' => variable_get('atomyxhelp_example_string', t('Some example content.')),
			);
			break;
		case 'deliver' :
			$form['job_actions_help'] = array(
				'#type' => 'text_format',
				'#title' => t('Job actions help.'),
				'#size' => 60,
				'#description' => t('Explanation of what user can see in table of jobs after the job  was validated.'),
				'#default_value' => variable_get('job_actions_help', variable_get('job_actions_help_default',t('Explanation of what user can see in table of jobs after the job  was validated.'))),
			);
			break;
	}

	return $form;
}

function atomyx_portal_block_save($delta = '', $edit = array()) {
	switch($delta) {
		case 'deliver' :
			variable_set('job_actions_help', $edit['job_actions_help']);
			break;
		case 'atomyxhelp' :
			variable_set('atomyxhelp_example_string', $edit['atomyxhelp_string']);
			break;
	}

	return;
}


function atomyx_portal_block_view($delta = "") {
	switch($delta) {
		case "atomyxhelp" : 
			$block['subject'] = t('Title of second block (example_empty)');
			$block['content'] = variable_get('atomyxhelp_example_string',  t('Some example content.'));
			break;
		case "deliver" : 
			$block['subject'] = t('Title of second block (example_empty)');
			require_once("deliver_form.inc");
			$block['content'] = drupal_get_form("_deliver_form");
			break;
		case "wellcome":
			$block['subject'] = t('Title of Wellcome block');
			$block['content'] = t('content wellcome');
		break;
	}
	
	return $block;
}


function atomyx_portal_entity_info_alter(&$entity_info) {
  // Add our new view mode to the list of view modes...
  $entity_info['node']['view modes']['atomyx_portal_node_list'] = array(
    'label' => t('Atomyx Portal node list'),
    'custom settings' => TRUE,
  );
}
