<?php

function atomyx_portal_install() {
// Wellcome page
	$wellcome = new stdClass();
	$wellcome->type = 'page';
	node_object_prepare($wellcome);
	$wellcome->title = t('Wellcome!');
	$wellcome->language = 'en';
	$wellcome->body[$wellcome->language][0]['value'] = 'Your value';
	$wellcome->body[$wellcome->language][0]['summary'] = 'Your summary';
	$wellcome->body[$wellcome->language][0]['format'] = 'filtered_html';
	$wellcome->menu = array(
	    'enabled' => 1,
	    'mlid' => 0,
	    'module' => 'menu',
	    'hidden' => 0,
	    'has_children' => 0,
	    'customized' => 1,
	    'options' => array(),
	    'expanded' => 0,
	    'parent_depth_limit' => 8,
	    'link_title' => t('Wellcome!'),
	    'description' => '',
	    'parent' => 'main-menu:0',
	    'weight' => 0,
	    'plid' => 0,
	    'menu_name' => 'main-menu'
	);


	$wellcome->path['alias'] = 'wellcome';

	$wellcome->status = 1;       
	$wellcome->promote = 0;
	$wellcome->revision = 0;
	node_save($wellcome);

// Deliver page
	$deliver = new stdClass();
	$deliver->type = 'page';
	node_object_prepare($deliver);
	$deliver->title = t('Deliver your work');
	$deliver->language = 'en';
	$deliver->body[$deliver->language][0]['value'] = 'Your value';
	$deliver->body[$deliver->language][0]['summary'] = 'Your summary';
	$deliver->body[$deliver->language][0]['format'] = 'filtered_html';
	$deliver->menu = array(
	    'enabled' => 1,
	    'mlid' => 0,
	    'module' => 'menu',
	    'hidden' => 0,
	    'has_children' => 0,
	    'customized' => 0,
	    'options' => array(),
	    'expanded' => 0,
	    'parent_depth_limit' => 8,
	    'link_title' => t('Deliver'),
	    'description' => '',
	    'parent' => 'main-menu:0',
	    'weight' => 5,
	    'plid' => 0,
	    'menu_name' => 'main-menu'
	);


	$deliver->path['alias'] = 'deliver';

	$deliver->status = 1;      
	$deliver->promote = 0;
	$deliver->revision = 0;
	node_save($deliver);

// Jobs page
	$jobs = new stdClass();
	$jobs->type = 'page';
	node_object_prepare($jobs);
	$jobs->title = t('Your Jobs');
	$jobs->language = 'en';
	$jobs->body[$jobs->language][0]['value'] = 'Your value';
	$jobs->body[$jobs->language][0]['summary'] = 'Your summary';
	$jobs->body[$jobs->language][0]['format'] = 'filtered_html';
	$jobs->menu = array(
	    'enabled' => 1,
	    'mlid' => 0,
	    'module' => 'menu',
	    'hidden' => 0,
	    'has_children' => 0,
	    'customized' => 0,
	    'options' => array(),
	    'expanded' => 0,
	    'parent_depth_limit' => 8,
	    'link_title' => t('Jobs'),
	    'description' => '',
	    'parent' => 'main-menu:0',
	    'weight' => 10,
	    'plid' => 0,
	    'menu_name' => 'main-menu'
	);


	$jobs->path['alias'] = 'Jobs';

	$jobs->status = 1;        
	$jobs->promote = 0;
	$jobs->revision = 0;
	node_save($jobs);
// My account page
	$my_account = new stdClass();
	$my_account->type = 'page';
	node_object_prepare($my_account);
	$my_account->title = t('My account');
	$my_account->language = 'en';
	$my_account->body[$my_account->language][0]['value'] = 'Your value';
	$my_account->body[$my_account->language][0]['summary'] = 'Your summary';
	$my_account->body[$my_account->language][0]['format'] = 'filtered_html';
	$my_account->menu = array(
	    'enabled' => 1,
	    'mlid' => 0,
	    'module' => 'menu',
	    'hidden' => 0,
	    'has_children' => 0,
	    'customized' => 0,
	    'options' => array(),
	    'expanded' => 0,
	    'parent_depth_limit' => 8,
	    'link_title' => t('My account'),
	    'description' => '',
	    'parent' => 'main-menu:0',
	    'weight' => 15,
	    'plid' => 0,
	    'menu_name' => 'main-menu'
	);


	$my_account->path['alias'] = 'my_account';

	$my_account->status = 1;       
	$my_account->promote = 0;
	$my_account->revision = 0;
	node_save($my_account);

//License page

	$license = new stdClass();
	$license->type = 'page';
	node_object_prepare($my_account);
	$license->title = t('License');
	$my_account->language = 'en';
	$my_account->body[$my_account->language][0]['value'] = 'Your value';
	$my_account->body[$my_account->language][0]['summary'] = 'Your summary';
	$my_account->body[$my_account->language][0]['format'] = 'filtered_html';

	$my_account->path['alias'] = 'license';

	$my_account->status = 1;       
	$my_account->promote = 0;
	$my_account->revision = 0;
	node_save($my_account);

// help
  $t = get_t();

  $node_atomhelp = array(
    'type' => 'node_atomhelp',
    'name' => $t('Atomyx help'),
    'base' => 'node_content',
    'description' => $t('Atomyx help node type.'),
    'body_label' => $t('Help Description'),
    'custom' => TRUE,
  );
  $content_type = node_type_set_defaults($node_atomhelp);

  node_type_save($content_type);

  foreach (_node_atomhelp_installed_fields() as $field) {
    field_create_field($field);
  }

  foreach (_node_atomhelp_installed_instances() as $instance) {
    $instance['entity_type'] = 'node';
    $instance['bundle'] = $node_atomhelp['type'];
    field_create_instance($instance);
  }

}
function atomyx_portal_uninstall() 
{
	#
	# ADD uninstal for page`s!!
	#

	///	  uninstall node atomix help
	$sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
	$result = db_query($sql, array(':type' => 'node_atomhelp'));
	$nids = array();
	foreach ($result as $row) {
		$nids[] = $row->nid;
	}
	node_delete_multiple($nids);
	foreach (array_keys(_node_atomhelp_installed_fields()) as $field) {
		field_delete_field($field);
	}
	$instances = field_info_instances('node', 'node_atomhelp');
	foreach ($instances as $instance_name => $instance) {
		field_delete_instance($instance);
	}
	node_type_delete('node_atomhelp');
	field_purge_batch(1000);
}


function _node_atomhelp_installed_fields() 
{
	$t = get_t();
	return array(
		'field_helpbody' => array(
			'field_name' => 'field_helpbody',
			'cardinality' => 1,
			'type' => 'text_with_summary',
		),
		'field_helppage' => array(
			'field_name'    => 'field_helppage',
			'type'          => 'list_text',
			'cardinality'   => 1,
			'settings'      =>array(
				'allowed_values'=>array(
					'all'       => 'all',
					''          => 'home',
					'myproducts'=> 'myproducts',
					'deliver'   => 'deliver',
					'closer'    => 'closer',
					'bummer'    => 'bummer',
					'close'     => 'close',
					'success'   => 'success',
					'jobs'      => 'jobs',
					'license'   => 'license',
					'upload'    => 'upload',
					'approve'   => 'approve',
					'mydelivery'=> 'mydelivery',
					'closecall'=> 'closecall',
					'change'=> 'change',
					'welcome'=> 'welcome',
				),
			),
		),
		'field_helpweight' => array(
			'field_name' => 'field_helpweight',
			'cardinality' => 1,
			'type'        => 'text',
			'settings'    => array(
				'max_length' => 60,
			),
		),
	); 
}
function _node_atomhelp_installed_instances()
{
	$t = get_t();
	return array(  
		'field_helpbody' => array(
			'field_name' => 'field_helpbody',
			'label'       => $t('Body:'),
			'required' => TRUE,
			'widget'      => array(
				'type'    => 'text_textarea_with_summary',
			),

			'display' => array(
				'atomhelp_node_list' => array(
					'label' => 'above',
					'type' => 'text_textnode',
				),
			),

		),  
		'field_helppage' => array(
			'field_name' => 'field_helppage',
			'label'       => $t('Page:'),
			'required' => TRUE,
			'widget'      => array(
				'type'    => 'options_select',
			),
			'display' => array(
				'atomhelp_node_list' => array(
					'label' => 'above',
					'type' => 'list_default',
				),
			),
		),
		'field_helpweight' => array(
			'field_name' => 'field_helpweight',
			'label'       => $t('Weight:'),
			'required' => TRUE,
			'widget'      => array(
				'type'    => 'text_textnode',
			),
			'display' => array(
				'atomhelp_node_list' => array(
					'label' => 'above',
					'type' => 'text',
				),
			),
		),
	);
   
}
