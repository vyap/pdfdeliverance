<?php

function create_page_vidth_menu_linc($page_property = array()) {
	$page = new stdClass();
	$page->type = 'page';
	node_object_prepare($page);
	$page->title = t($page_property['page_title']);
	$page->language = $page_property['page_language'];
	$page->body[$page->language][0]['value'] = 'Your value';
	$page->body[$page->language][0]['summary'] = 'Your summary';
	$page->body[$page->language][0]['format'] = $page_property['body_format'];
	$page->menu = array(
		'enabled' => 1,
		'mlid' => 0,
		'module' => 'menu',
		'hidden' => 0,
		'has_children' => 0,
		'customized' => 1,
		'options' => array(),
		'expanded' => 0,
		'parent_depth_limit' => 8,
		'link_title' => t($page_property['menu_link_title']),
		'description' => '',
		'parent' => 'main-menu:0',
		'weight' => $page_property['page_weight'],
		'plid' => 0,
		'menu_name' => 'main-menu'
	);


	$page->path['alias'] = $page_property['page_alias'];

	$page->status = 1;
	$page->promote = 0;
	$page->revision = 0;
	node_save($page);
}

function create_pages_properties() {
	return array(
		'wellcome' => array(
			'page_title' => 'Wellcome!',
			'page_language' => 'en',
			'body_format' => 'filtered_html',
			'menu_link_title' => 'Wellcome!',
			'page_alias' => 'wellcome',
			'page_weight' => 1,
		),
		'deliver' => array(
			'page_title' => 'Deliver your work',
			'page_language' => 'en',
			'body_format' => 'filtered_html',
			'menu_link_title' => 'Deliver',
			'page_alias' => 'deliver',
			'page_weight' => 2,
		),
		'jobs' => array(
			'page_title' => 'Your Jobs',
			'page_language' => 'en',
			'body_format' => 'filtered_html',
			'menu_link_title' => 'jobs',
			'page_alias' => 'jobs',
			'page_weight' => 3,
		),
		/*'my_account' => array(
			'page_title' => 'My account',
			'page_language' => 'en',
			'body_format' => 'filtered_html',
			'menu_link_title' => 'My account',
			'page_alias' => 'user',
			'page_weight' => 4,
		),*/
		
	);
}



function atomyx_portal_install() {
	$page_propertys = create_pages_properties();
	foreach ($page_propertys as $page_property) {
		create_page_vidth_menu_linc($page_property);
	}
	
	require_once('block_default_texts.inc');
	set_default_blocks_texts();

// Atomyx help node creation
  $t = get_t();

  $node_atomhelp = array(
    'type' => 'node_atomhelp',
    'name' => $t('Atomyx help'),
    'base' => 'node_content',
    'description' => $t('Atomyx help node type.'),
    'body_label' => $t('Help Description'),
    'custom' => TRUE,
  );
  $help_content_type = node_type_set_defaults($node_atomhelp);

  node_type_save($help_content_type);
  include_once('atomyx_help.fields.inc');
  foreach (_node_atomhelp_installed_fields() as $help_field) {
    field_create_field($help_field);
  }

  foreach (_node_atomhelp_installed_instances() as $help_instance) {
    $help_instance['entity_type'] = 'node';
    $help_instance['bundle'] = $node_atomhelp['type'];
    field_create_instance($help_instance);
  }
  
  //Product node type creation
  
	$node_product = array(
		'type'        => 'atomyx_product',
		'name'        => t('Product'),
		'base'        => 'node_content',
		'description' => t('Product type node.'),
		'custom'      => TRUE,
	);

	$product_content_type = node_type_set_defaults($node_product);

// Save the Product content type
	node_type_save($product_content_type);
	include_once('atomyx_product.fields.inc');
//Product node fields creation
	foreach (_product_node_installed_fields() as $product_field) {
		field_create_field($product_field);
	}

	foreach (_product_node_installed_instances() as $product_instance) {
		$product_instance['entity_type'] = 'node';
		$product_instance['bundle'] = $node_product['type'];
		field_create_instance($product_instance);
	}


}
function atomyx_portal_uninstall() 
{
	#
	# ADD uninstal for page`s!!
	#

	///	  uninstall node Atomix help
	$sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
	$result = db_query($sql, array(':type' => 'node_atomhelp'));
	$nids = array();
	foreach ($result as $row) {
		$nids[] = $row->nid;
	}
	node_delete_multiple($nids);
	include_once('atomyx_help.fields.inc');
	foreach (array_keys(_node_atomhelp_installed_fields()) as $help_field) {
		field_delete_field($help_field);
	}
	$help_instances = field_info_instances('node', 'node_atomhelp');
	foreach ($help_instances as $instance_name => $help_instance) {
		field_delete_instance($help_instance);
	}
	node_type_delete('node_atomhelp');
	field_purge_batch(1000);
	
//Product node uninstall
		$sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
		$result = db_query($sql, array(':type' => 'atomyx_product'));
		$nids = array();
		foreach ($result as $row) {
			$nids[] = $row->nid;
		}

		node_delete_multiple($nids);
			include_once('atomyx_product.fields.inc');
		foreach (array_keys(_product_node_installed_fields()) as $product_field) {
			field_delete_field($product_field);
		}

		$product_instances = field_info_instances('node', 'atomyx_product');
		foreach ($product_instances as $instance_name => $product_instance) {
			field_delete_instance($product_instance);
		}

		node_type_delete('atomyx_product');

		field_purge_batch(1000);


		entity_info_cache_clear();
		cache_clear_all();

}

