<?php

function atomyx_portal_install() {
// Wellcome page
	$wellcome = new stdClass();
	$wellcome->type = 'page';
	node_object_prepare($wellcome);
	$wellcome->title = t('Wellcome!');
	$wellcome->language = 'en';
	$wellcome->body[$wellcome->language][0]['value'] = 'Your value';
	$wellcome->body[$wellcome->language][0]['summary'] = 'Your summary';
	$wellcome->body[$wellcome->language][0]['format'] = 'filtered_html';
	$wellcome->menu = array(
	    'enabled' => 1,
	    'mlid' => 0,
	    'module' => 'menu',
	    'hidden' => 0,
	    'has_children' => 0,
	    'customized' => 1,
	    'options' => array(),
	    'expanded' => 0,
	    'parent_depth_limit' => 8,
	    'link_title' => t('Wellcome!'),
	    'description' => '',
	    'parent' => 'main-menu:0',
	    'weight' => 0,
	    'plid' => 0,
	    'menu_name' => 'main-menu'
	);


	$wellcome->path['alias'] = 'wellcome';

	$wellcome->status = 1;       
	$wellcome->promote = 0;
	$wellcome->revision = 0;
	node_save($wellcome);

// Deliver page
	$deliver = new stdClass();
	$deliver->type = 'page';
	node_object_prepare($deliver);
	$deliver->title = t('Deliver your work');
	$deliver->language = 'en';
	$deliver->body[$deliver->language][0]['value'] = 'Your value';
	$deliver->body[$deliver->language][0]['summary'] = 'Your summary';
	$deliver->body[$deliver->language][0]['format'] = 'filtered_html';
	$deliver->menu = array(
	    'enabled' => 1,
	    'mlid' => 0,
	    'module' => 'menu',
	    'hidden' => 0,
	    'has_children' => 0,
	    'customized' => 0,
	    'options' => array(),
	    'expanded' => 0,
	    'parent_depth_limit' => 8,
	    'link_title' => t('Deliver'),
	    'description' => '',
	    'parent' => 'main-menu:0',
	    'weight' => 5,
	    'plid' => 0,
	    'menu_name' => 'main-menu'
	);


	$deliver->path['alias'] = 'deliver';

	$deliver->status = 1;      
	$deliver->promote = 0;
	$deliver->revision = 0;
	node_save($deliver);

// Jobs page
	$jobs = new stdClass();
	$jobs->type = 'page';
	node_object_prepare($jobs);
	$jobs->title = t('Your Jobs');
	$jobs->language = 'en';
	$jobs->body[$jobs->language][0]['value'] = 'Your value';
	$jobs->body[$jobs->language][0]['summary'] = 'Your summary';
	$jobs->body[$jobs->language][0]['format'] = 'filtered_html';
	$jobs->menu = array(
	    'enabled' => 1,
	    'mlid' => 0,
	    'module' => 'menu',
	    'hidden' => 0,
	    'has_children' => 0,
	    'customized' => 0,
	    'options' => array(),
	    'expanded' => 0,
	    'parent_depth_limit' => 8,
	    'link_title' => t('Jobs'),
	    'description' => '',
	    'parent' => 'main-menu:0',
	    'weight' => 10,
	    'plid' => 0,
	    'menu_name' => 'main-menu'
	);


	$jobs->path['alias'] = 'Jobs';

	$jobs->status = 1;        
	$jobs->promote = 0;
	$jobs->revision = 0;
	node_save($jobs);
// My account page
	$my_account = new stdClass();
	$my_account->type = 'page';
	node_object_prepare($my_account);
	$my_account->title = t('My account');
	$my_account->language = 'en';
	$my_account->body[$my_account->language][0]['value'] = 'Your value';
	$my_account->body[$my_account->language][0]['summary'] = 'Your summary';
	$my_account->body[$my_account->language][0]['format'] = 'filtered_html';
	$my_account->menu = array(
	    'enabled' => 1,
	    'mlid' => 0,
	    'module' => 'menu',
	    'hidden' => 0,
	    'has_children' => 0,
	    'customized' => 0,
	    'options' => array(),
	    'expanded' => 0,
	    'parent_depth_limit' => 8,
	    'link_title' => t('My account'),
	    'description' => '',
	    'parent' => 'main-menu:0',
	    'weight' => 15,
	    'plid' => 0,
	    'menu_name' => 'main-menu'
	);


	$my_account->path['alias'] = 'my_account';

	$my_account->status = 1;       
	$my_account->promote = 0;
	$my_account->revision = 0;
	node_save($my_account);

//License page

	$license = new stdClass();
	$license->type = 'page';
	node_object_prepare($my_account);
	$license->title = t('License');
	$my_account->language = 'en';
	$my_account->body[$my_account->language][0]['value'] = 'Your value';
	$my_account->body[$my_account->language][0]['summary'] = 'Your summary';
	$my_account->body[$my_account->language][0]['format'] = 'filtered_html';

	$my_account->path['alias'] = 'license';

	$my_account->status = 1;       
	$my_account->promote = 0;
	$my_account->revision = 0;
	node_save($my_account);

// Atomyx help node creation
  $t = get_t();

  $node_atomhelp = array(
    'type' => 'node_atomhelp',
    'name' => $t('Atomyx help'),
    'base' => 'node_content',
    'description' => $t('Atomyx help node type.'),
    'body_label' => $t('Help Description'),
    'custom' => TRUE,
  );
  $help_content_type = node_type_set_defaults($node_atomhelp);

  node_type_save($help_content_type);
  include_once('atomyx_help.fields.inc');
  foreach (_node_atomhelp_installed_fields() as $help_field) {
    field_create_field($help_field);
  }

  foreach (_node_atomhelp_installed_instances() as $help_instance) {
    $help_instance['entity_type'] = 'node';
    $help_instance['bundle'] = $node_atomhelp['type'];
    field_create_instance($help_instance);
  }
  
  //Product node type creation
  
	$node_product = array(
		'type'        => 'atomyx_product',
		'name'        => t('Product'),
		'base'        => 'node_content',
		'description' => t('Product type node.'),
		'custom'      => TRUE,
	);

	$product_content_type = node_type_set_defaults($node_product);

// Save the Product content type
	node_type_save($product_content_type);
	include_once('atomyx_product.fields.inc');
//Product node fields creation
	foreach (_product_node_installed_fields() as $product_field) {
		field_create_field($product_field);
	}

	foreach (_product_node_installed_instances() as $product_instance) {
		$product_instance['entity_type'] = 'node';
		$product_instance['bundle'] = $node_product['type'];
		field_create_instance($product_instance);
	}


}
function atomyx_portal_uninstall() 
{
	#
	# ADD uninstal for page`s!!
	#

	///	  uninstall node Atomix help
	$sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
	$result = db_query($sql, array(':type' => 'node_atomhelp'));
	$nids = array();
	foreach ($result as $row) {
		$nids[] = $row->nid;
	}
	node_delete_multiple($nids);
	include_once('atomyx_help.fields.inc');
	foreach (array_keys(_node_atomhelp_installed_fields()) as $help_field) {
		field_delete_field($help_field);
	}
	$help_instances = field_info_instances('node', 'node_atomhelp');
	foreach ($help_instances as $instance_name => $help_instance) {
		field_delete_instance($help_instance);
	}
	node_type_delete('node_atomhelp');
	field_purge_batch(1000);
	
//Product node uninstall
		$sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
		$result = db_query($sql, array(':type' => 'atomyx_product'));
		$nids = array();
		foreach ($result as $row) {
			$nids[] = $row->nid;
		}

		node_delete_multiple($nids);
			include_once('atomyx_product.fields.inc');
		foreach (array_keys(_product_node_installed_fields()) as $product_field) {
			field_delete_field($product_field);
		}

		$product_instances = field_info_instances('node', 'atomyx_product');
		foreach ($product_instances as $instance_name => $product_instance) {
			field_delete_instance($product_instance);
		}

		node_type_delete('atomyx_product');

		field_purge_batch(1000);
	
}

